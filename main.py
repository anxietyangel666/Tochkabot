from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ConversationHandler
from telegram.error import TelegramError
from config.config import BOT_TOKEN
from database.db_handler import DatabaseHandler
from handlers.auth_handler import AuthHandler
from handlers.common_handler import start, cancel, logout
from utils.states import *
from utils.logger import setup_logger
import os
import sys
import asyncio

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
os.makedirs('logs', exist_ok=True)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä
logger = setup_logger()

async def error_handler(update, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {context.error}")
    logger.exception(context.error)

def main():
    try:
        logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        db = DatabaseHandler('users.db')
        db.setup_database()
        logger.info("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        auth_handler = AuthHandler()
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        application = Application.builder().token(BOT_TOKEN).build()
        logger.info(f"–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —Å —Ç–æ–∫–µ–Ω–æ–º: {BOT_TOKEN[:10]}...")

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        application.add_error_handler(error_handler)

        # –°–æ–∑–¥–∞–µ–º ConversationHandler
        conv_handler = ConversationHandler(
            entry_points=[CommandHandler('start', start)],
            states={
                LOGIN: [
                    MessageHandler(filters.Regex('^üîê –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è$'), auth_handler.register),
                    MessageHandler(filters.Regex('^üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è$'), auth_handler.authorize),
                    MessageHandler(filters.Regex('^üè™ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–∞–≥–∞–∑–∏–Ω–∞$'), auth_handler.start_add_store),
                    MessageHandler(filters.Regex('^üè™ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤ –º–∞–≥–∞–∑–∏–Ω$'), auth_handler.start_store_auth),
                    MessageHandler(filters.Regex('^‚Ü©Ô∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é$'), start),
                    MessageHandler(filters.Regex('^‚Ü©Ô∏è –ù–∞–∑–∞–¥$'), start),
                ],
                STORE_AUTH: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.handle_store_auth)
                ],
                STORE_ADDRESS: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.get_store_address)
                ],
                FULL_NAME: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.get_full_name)
                ],
                BARCODE: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.get_barcode)
                ],
                BARCODE_AUTH: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.check_auth_barcode)
                ],
                MENU: [
                    MessageHandler(filters.Regex('^‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å$'), auth_handler.show_edit_menu),
                    MessageHandler(filters.Regex('^üîê –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞$'), auth_handler.request_admin_rights),
                    MessageHandler(filters.Regex('^üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å$'), auth_handler.show_admin_panel),
                    MessageHandler(filters.Regex('^üö™ –í—ã–π—Ç–∏$'), logout),
                    MessageHandler(filters.Regex('^üìÖ –ì—Ä–∞—Ñ–∏–∫$'), auth_handler.show_schedule_menu),
                ],
                ADMIN_CODE: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.check_admin_code)
                ],
                EDIT_CHOICE: [
                    MessageHandler(filters.Regex('^üìù –ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û$'), auth_handler.edit_name),
                    MessageHandler(filters.Regex('^üî¢ –ò–∑–º–µ–Ω–∏—Ç—å —à—Ç—Ä–∏—Ö-–∫–æ–¥$'), auth_handler.edit_barcode),
                    MessageHandler(filters.Regex('^üìÖ –£–∫–∞–∑–∞—Ç—å –¥–∞—Ç—É —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞$'), auth_handler.edit_hire_date),
                    MessageHandler(filters.Regex('^üè™ –í—ã–±—Ä–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω$'), auth_handler.show_stores_list),
                    MessageHandler(filters.Regex('^‚Ü©Ô∏è –ù–∞–∑–∞–¥$'), auth_handler.show_menu),
                ],
                SELECT_STORE: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.handle_store_selection)
                ],
                EDIT_NAME: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.save_new_name)
                ],
                EDIT_BARCODE: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.save_new_barcode)
                ],
                EDIT_HIRE_DATE: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.save_hire_date)
                ],
                ADMIN_MENU: [
                    MessageHandler(filters.Regex('^üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏$'), auth_handler.show_users_list),
                    MessageHandler(filters.Regex('^üè™ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏$'), auth_handler.show_stores_menu),
                    MessageHandler(filters.Regex('^üë®‚Äçüíº –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏$'), auth_handler.show_administrators),
                    MessageHandler(filters.Regex('^‚Ü©Ô∏è –ù–∞–∑–∞–¥$'), auth_handler.show_menu),
                ],
                STORES_MENU: [
                    MessageHandler(filters.Regex('^‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω$'), auth_handler.start_add_store),
                    MessageHandler(filters.Regex('^‚ùå –£–¥–∞–ª–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω$'), auth_handler.delete_store_start),
                    MessageHandler(filters.Regex('^üë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞$'), auth_handler.show_store_employees),
                    MessageHandler(filters.Regex('^‚Ü©Ô∏è –ù–∞–∑–∞–¥$'), auth_handler.show_admin_panel),
                ],
                DELETE_STORE: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.handle_store_deletion)
                ],
                SELECT_STORE_EMPLOYEES: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.show_employees_list)
                ],
                SELECT_EMPLOYEE: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.handle_employee_selection)
                ],
                EMPLOYEE_ACTIONS: [
                    MessageHandler(filters.Regex('^‚ùå –£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞$'), auth_handler.delete_employee),
                    MessageHandler(filters.Regex('^üè™ –£–∫–∞–∑–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω$'), auth_handler.show_stores_list),
                    MessageHandler(filters.Regex('^‚Ü©Ô∏è –ù–∞–∑–∞–¥$'), auth_handler.show_employees_list),
                ],
                SELECT_ADMIN: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.handle_admin_selection)
                ],
                ASSIGN_STORES: [
                    MessageHandler(filters.Regex('^üè™ –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω—ã$'), auth_handler.show_stores_for_assignment),
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.handle_store_assignment)
                ],
                SELECT_USER: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.handle_user_selection)
                ],
                SELECT_POSITION: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.handle_position_selection)
                ],
                EDIT_STORE: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.handle_store_edit)
                ],
                USER_MANAGEMENT: [
                    MessageHandler(filters.Regex('^üëî –ò–∑–º–µ–Ω–∏—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç—å$'), auth_handler.show_position_selection),
                    MessageHandler(filters.Regex('^üè™ –ò–∑–º–µ–Ω–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω$'), auth_handler.show_store_selection),
                    MessageHandler(filters.Regex('^‚ùå –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω –ø—Ä–∞–≤–∞$'), auth_handler.remove_admin_rights),
                    MessageHandler(filters.Regex('^‚Ü©Ô∏è –ù–∞–∑–∞–¥$'), auth_handler.show_users_list),
                ],
                SCHEDULE_MENU: [
                    MessageHandler(filters.Regex('^üëÅ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥—Ä–∞—Ñ–∏–∫$'), auth_handler.view_schedule),
                    MessageHandler(filters.Regex('^‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫$'), auth_handler.edit_schedule),
                    MessageHandler(filters.Regex('^‚ûï –°–æ–∑–¥–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫$'), auth_handler.create_schedule),
                    MessageHandler(filters.Regex('^üîÑ –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–º–µ–Ω—É$'), auth_handler.start_add_substitution),
                    MessageHandler(filters.Regex('^üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–º–µ–Ω—É$'), auth_handler.edit_substitution_menu),
                    MessageHandler(filters.Regex('^‚Ü©Ô∏è –ù–∞–∑–∞–¥$'), auth_handler.show_menu),
                ],
                CREATE_SCHEDULE: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.save_schedule),
                ],
                EDIT_SCHEDULE: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.save_schedule),
                ],
                VIEW_SCHEDULE: [
                    MessageHandler(filters.Regex('^‚Ü©Ô∏è –ù–∞–∑–∞–¥$'), auth_handler.show_schedule_menu),
                ],
                ADD_SUBSTITUTION_STORE: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.handle_substitution_store),
                ],
                ADD_SUBSTITUTION_DATE: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.handle_substitution_date),
                ],
                ADD_SUBSTITUTION_HOURS: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.handle_substitution_hours),
                ],
                EDIT_SUBSTITUTION: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.handle_substitution_edit_choice)
                ],
                SELECT_SUBSTITUTION_DATE: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, auth_handler.handle_substitution_date_selection)
                ],
            },
            fallbacks=[CommandHandler('cancel', cancel)],
            allow_reentry=True,
            name='main_conversation'
        )

        logger.info("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–Ω–≤–µ—Ä—Å–∞—Ü–∏–∏")
        application.add_handler(conv_handler)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        logger.info("–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞")
        application.run_polling(allowed_updates=Update.ALL_TYPES)

    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        logger.exception(e)
        sys.exit(1)

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        logger.exception(e) 